# Author: Ali Uneri
# Date: 2011-07-25

set(EP_OPTION_NAME "USE_${EP_NAME}")
set(EP_REQUIRED_PROJECTS Git)
set(EP_URL "git://github.com/Itseez/opencv.git")
set(EP_OPTION_DESCRIPTION "Open Source Computer Vision")

cma_list(APPEND EP_REQUIRED_PROJECTS FFmpeg IF USE_FFmpeg)
cma_list(APPEND EP_REQUIRED_PROJECTS Python IF USE_Python)

cma_envvar(@LIBRARYPATH@ PREPEND "@BINARY_DIR@/@LIBDIR@/@INTDIR@")

cma_end_definition()
# -----------------------------------------------------------------------------

set(EP_CMAKE_COMMAND ${CMAKE_COMMAND})
set(EP_CMAKE_ARGS
  -DBUILD_DOCS:BOOL=OFF
  -DBUILD_opencv_python:BOOL=${USE_Python}
  -DBUILD_PACKAGE:BOOL=OFF
  -DBUILD_PERF_TESTS:BOOL=OFF
  -DBUILD_TESTS:BOOL=OFF
  -DBUILD_WITH_DEBUG_INFO:BOOL=OFF
  -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
  -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}
  -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
  -DWITH_CUDA:BOOL=OFF
  -DWITH_FFMPEG:BOOL=${USE_FFmpeg}
  -DWITH_OPENCL:BOOL=OFF
  -DWITH_QT:BOOL=${USE_Qt})

if(USE_FFmpeg)
  set(EP_CMAKE_COMMAND ${CMAKE_COMMAND} -E env PKG_CONFIG_PATH=${PROJECT_BINARY_DIR}/FFmpeg-install/lib/pkgconfig ${CMAKE_COMMAND})
  list(APPEND EP_CMAKE_ARGS -DFFMPEG_INCLUDE_DIR:PATH=${PROJECT_BINARY_DIR}/FFmpeg-install/include)
endif()
if(USE_Python)
  list(APPEND EP_CMAKE_ARGS
    -DPYTHON_EXECUTABLE:FILEPATH=${${PROJECT_NAME}_PYTHON_EXECUTABLE}
    -DPYTHON_INCLUDE_DIR:PATH=${${PROJECT_NAME}_PYTHON_INCLUDE_DIR}
    -DPYTHON_LIBRARY:FILEPATH=${${PROJECT_NAME}_PYTHON_LIBRARY})
endif()

ExternalProject_Add(${EP_NAME}
  DEPENDS ${EP_REQUIRED_PROJECTS}
  # download
  GIT_REPOSITORY ${EP_URL}
  GIT_TAG 2.4.11
  # patch
  # update
  UPDATE_COMMAND ""
  # configure
  SOURCE_DIR ${PROJECT_BINARY_DIR}/${EP_NAME}
  CMAKE_COMMAND ${EP_CMAKE_COMMAND}
  CMAKE_ARGS ${EP_CMAKE_ARGS}
  # build
  BINARY_DIR ${PROJECT_BINARY_DIR}/${EP_NAME}-build
  # install
  INSTALL_COMMAND ""
  # test
  )

set(${PROJECT_NAME}_${EP_NAME}_DIR "${PROJECT_BINARY_DIR}/${EP_NAME}-build" CACHE INTERNAL "")
